generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  name     String
  email    String  @unique
  password String
  tag      String  @default("seller")
  status   Boolean @default(true)

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  sellers Seller[]

  @@map("users")
}

model Product {
  id       String  @id @default(uuid())
  name     String
  cust     Int
  price    Int
  due_date String
  amount   Int
  status   Boolean @default(true)

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  clients  Client[]
  Category Category @relation(fields: [category_id], references: [id])

  category_id String

  @@map("products")
}

model Category {
  id     String  @id @default(uuid())
  name   String
  status Boolean @default(true)

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  products Product[]
  stock    Stock     @relation(fields: [stock_id], references: [id])

  stock_id String

  @@map("categories")
}

model Stock {
  id                String  @id @default(uuid())
  name              String  @unique @default("Principal")
  entry_date        String
  physical_location String
  sold_quantity     Int
  status            Boolean @default(true)

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  suppliers  Supplier[]
  cashFlows  CashFlow[]
  categories Category[]

  @@map("stocks")
}

model CashFlow {
  id                      String  @id @default(uuid())
  date                    String
  balance                 Int
  additional_informations String
  supplier                String
  status                  Boolean @default(true)

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  sellers Seller[]
  stock   Stock    @relation(fields: [stock_id], references: [id])

  stock_id String

  @@map("cashflows")
}

model Seller {
  id     String  @id @default(uuid())
  name   String
  sale   Int
  status Boolean @default(true)

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  clients  Client[]
  cashFlow CashFlow? @relation(fields: [cashFlow_id], references: [id])
  user     User      @relation(fields: [user_id], references: [id])

  user_id     String
  cashFlow_id String?

  @@map("sellers")
}

model Client {
  id                      String  @id @default(uuid())
  kind_payment            String
  transaction_description String
  date_sale               String
  status                  Boolean @default(true)

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  product Product @relation(fields: [product_id], references: [id])
  seller  Seller  @relation(fields: [sellers_id], references: [id])

  product_id String
  sellers_id String

  @@map("clients")
}

model Supplier {
  id     String  @id @default(uuid())
  name   String
  type   String
  status Boolean @default(true)

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  stock Stock? @relation(fields: [stock_id], references: [id])

  stock_id String?

  @@map("suppliers")
}
